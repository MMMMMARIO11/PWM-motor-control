#-----------------------------------------------------------
# Vivado v2018.3 (64-bit)
# SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
# Start of session at: Fri Jul 31 07:17:00 2020
# Process ID: 13700
# Current directory: D:/summer project/improve/UART_Demo
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent9632 D:\summer project\improve\UART_Demo\UART_Demo.xpr
# Log file: D:/summer project/improve/UART_Demo/vivado.log
# Journal file: D:/summer project/improve/UART_Demo\vivado.jou
#-----------------------------------------------------------
start_gui
open_project {D:/summer project/improve/UART_Demo/UART_Demo.xpr}
update_compile_order -fileset sources_1
close [ open {D:/summer project/improve/UART_Demo/UART_Demo.srcs/sources_1/new/BCD.v} w ]
add_files {{D:/summer project/improve/UART_Demo/UART_Demo.srcs/sources_1/new/BCD.v}}
update_compile_order -fileset sources_1
update_compile_order -fileset sources_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
export_ip_user_files -of_objects  [get_files {{D:/summer project/improve/UART_Demo/UART_Demo.srcs/sources_1/ip/clk_wiz_0_2/clk_wiz_0.xci}}] -no_script -reset -force -quiet
remove_files  {{D:/summer project/improve/UART_Demo/UART_Demo.srcs/sources_1/ip/clk_wiz_0_2/clk_wiz_0.xci}}
create_ip -name clk_wiz -vendor xilinx.com -library ip -version 6.0 -module_name clk_wiz_0 -dir {d:/summer project/improve/UART_Demo/UART_Demo.srcs/sources_1/ip}
set_property -dict [list CONFIG.CLKOUT2_USED {true} CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {10.000} CONFIG.MMCM_DIVCLK_DIVIDE {1} CONFIG.MMCM_CLKOUT1_DIVIDE {100} CONFIG.NUM_OUT_CLKS {2} CONFIG.CLKOUT2_JITTER {209.588} CONFIG.CLKOUT2_PHASE_ERROR {98.575}] [get_ips clk_wiz_0]
generate_target {instantiation_template} [get_files {{d:/summer project/improve/UART_Demo/UART_Demo.srcs/sources_1/ip/clk_wiz_0_3/clk_wiz_0.xci}}]
update_compile_order -fileset sources_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 2
wait_on_run impl_1
